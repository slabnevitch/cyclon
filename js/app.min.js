/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

// // Import jQuery module (npm i jquery)
// import $ from 'jquery'
// window.jQuery = $
// window.$ = $

// // Import vendor jQuery plugin example (not module)
// import Parallax from 'parallax-js'

// import Swiper, { Navigation, Mousewheel } from 'swiper';
// Swiper.use([Navigation, Mousewheel]);

// import FormHandler from 'formhandler.js';

//- SERVIVE FUNCTIONS==================

//- remove-class--------------------------
//- require('./vendor/libs-vanilla/service-functions/remove-class.js')

//- siblings--------------------------
//- require('./vendor/libs-vanilla/service-functions/siblings.js')

//- webp-detection--------------------------
// require('./vendor/libs-vanilla/service-functions/webp-detection.js')

//- dropdown-toggle on touch devices--------------------------
//- require('./vendor/libs-vanilla/service-functions/dropdown-toggle.js')

//- isMobile--------------------------
// require('./vendor/libs-vanilla/service-functions/mobileDetect.js')

//- All in one file--------------------------
// require('./vendor/libs-vanilla/service-functions/all-functions.js')

//- WITH JQUERY===================================
//- jquery--------------------------
// require('./vendor/libs/jquery/jquery-3.1.1.min.js')

//- jquery-UI--------------------------Не проверено!
// require('./vendor/libs/jquery-ui/jquery-ui.min.js')

//- dl-menu--------------------------
// require('./vendor/libs/dlmenu/js/modernizr.custom.js')
// var dlmenu = require('./vendor/libs/dlmenu/js/jquery.dlmenu.js')
// папку dl-menu/fonts копировать в главную fonts и переименовать в "dl-menu-font"

//- magnific-popup--------------------------
// require('./vendor/libs/magnific-popup/dist/jquery.magnific-popup.min.js')

//- slick--------------------------
// require('./vendor/libs/slick/slick.min.js')

//- slick-master (без лишних контейнеров)--------------------------
// require('./vendor/libs/slick-master/slick.js')

//- superfish--------------------------Не проверено!
// require('./vendor/libs/superfish/dist/js/hoverIntent.js')
// require('./vendor/libs/superfish/dist/js/superfish.min.js')

//- end WITH JQUERY===================================

//- VANILLA JS===================================
//- dynamic-adaptive--------------------------
// require('./vendor/libs-vanilla/dynamic-adaptive/da(es6).js')

//- slideout--------------------------
// var Slideout = require('./vendor/libs-vanilla/slideout/slideout.js')

//- multilevel-panel--------------------------Не проверено!
// require('./vendor/libs-vanilla/multilevel-panel/multilevel-panel.js')

//- multilevel-dropdown-menu--------------------------
// require('./vendor/libs-vanilla/multilevel-dropdown/multidropdown.js')

//- lazysizes--------------------------Не проверено!
// require('./vendor/libs-vanilla/lazysizes/lazysizes.min.js')

//- accordion--------------------------
// require('./vendor/libs-vanilla/accordion/vanilla-accordion.js')

//- tabs--------------------------
// require('./vendor/libs-vanilla/tabs/tabs-pure.js')

//- tabs-accordion-combine--------------------------
// require('./vendor/libs-vanilla/tabs-accordion-combine/tabs-accordion.js')

//- micromodal--------------------------
// var MicroModal = require('./vendor/libs-vanilla/micromodal/micromodal.js')

//- swiper--------------------------
// require('./vendor/libs-vanilla/swiper/swiper-bundle.min.js')

//- tiny-slider--------------------------Не проверено!
// require('./vendor/libs-vanilla/tiny-slider/dist/tiny-slider.js')

//- wNumb--------------------------
// var wNumb = require('./vendor/libs-vanilla/wnumb/wNumb.js')

// - noUiSlider--------------------------
// var noUiSlider = require('./vendor/libs-vanilla/noUiSlider/nouislider.min.js')

//- iMask--------------------------
// require('./vendor/libs-vanilla/imask/imask.js')

//- FormHandler--------------------------
//- html разыметка должна быть как в доке https://ivangrimes.github.io/formhandler.js/, обязателько должен присутствовать <div class="formhandler__notices"></div>!
//- кастомные стили для инпута и ошибок здесь _misc/formHandler-custom
// var FormHandler = require('./vendor/libs-vanilla/formhandler.js-1.1.2/dist/js/FormHandler.js')

//- ratings--------------------------
// require('./vendor/libs-vanilla/rating/ratings.js')

//- scroll-to-sects--------------------------
// require('./vendor/libs-vanilla/scroll-to-sects/scrolltosect.js')

//- tippy--------------------------
//- https://atomiks.github.io/tippyjs/
//- base using:  html: <button data-tippy-content="Tooltip">Text</button>; js: tippy('[data-tippy-content]');
// import tippy from 'tippy.js';

//- sticky-sidebar -------------------------- Не проверено!
//- https://abouolia.github.io/sticky-sidebar/#usage
// require('./vendor/libs-vanilla/sticky-sidebar/dist/resizeSensor.js')
// require('./vendor/libs-vanilla/sticky-sidebar/dist/sticky-sidebar.min.js')

//- simplebar--------------------------
//- USE:	new SimpleBar(document.querySelector('mySelector'), { autoHide: false });
// var SimpleBar = require('./vendor/libs-vanilla/simplebar/simplebar.min.js')

//- fstdropdown (кастомный селект), исп-е.: <select data-searchdisable="true" class="fstdropdown-select">
// require('./vendor/libs-vanilla/fstdropdown/fstdropdown.min.js')

//- baguetteBox-------------------------- use: https://github.com/feimosi/baguetteBox.js#usage
// var baguetteBox = require('./vendor/libs-vanilla/baguetteBox/dist/baguetteBox.min.js')

//- counter--------------------------
// require('./vendor/libs-vanilla/counter/counter.js')

// var tingle = require('./vendor/libs-vanilla/tingle-master/dist/tingle.js')
var docSlider = __webpack_require__(1);

//- end VANILLA JS===================================

// require('./vendor/color-scheme-switcher.js')
// require('./vendor/jquery-scrollify/jquery.scrollify.js')

document.addEventListener('DOMContentLoaded', function () {
  console.log(docSlider);
  // docSlider.init();
}); //DOMContentLoaded

/***/ }),
/* 1 */
/***/ (function(module, exports) {

/**-----------------------

 docSlider.js - ver.3.0.1
 URL : https://prjct-samwest.github.io/docSlider/
 created by SamWest
 Copyright (c) 2020 SamWest.
 This plugin is released under the MIT License.

 -----------------------**/

var docSlider = function () {
  var undefined;
  var sc, pcr;
  var d = {};
  var op = {
    speed: 600,
    easing: 'ease',
    pager: true,
    horizontal: false,
    startSpeed: null,
    scrollReset: false,
    complete: function complete() {},
    beforeChange: function beforeChange() {},
    afterChange: function afterChange() {},
    setInitCss: function setInitCss(index, horizontal) {
      var point = horizontal ? 'left' : 'top';
      var style = {};
      style[point] = index * 100 + '%';
      return style;
    },
    setChangeCss: function setChangeCss(index, currentIndex, speed, easing, horizontal) {
      var xy = horizontal ? 'X' : 'Y';
      var style = {};
      style.transitionProperty = 'transform';
      style.transitionDuration = speed + 'ms';
      style.transitionTimingFunction = easing;
      style.transform = 'translate' + xy + '(-' + currentIndex * 100 + '%)';
      return style;
    }
  };
  var f = {
    setOptions: function setOptions(options) {
      if (options === undefined) return;
      var keys = Object.keys(options);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        op[key] = options[key];
      }
      if (!op.pager) u.updatePager = function () {};
    },
    createInner: function createInner() {
      var wrapper = document.querySelector('.docSlider');
      var inner = document.createElement('div');
      var pages = document.querySelectorAll('.docSlider > *:not(.docSlider-pager)');
      inner.classList.add('docSlider-inner');
      for (var i = 0; i < pages.length; i++) {
        var page = pages[i];
        var prop = op.setInitCss(i, op.horizontal);
        for (var p = 0; p < Object.keys(prop).length; p++) {
          var key = Object.keys(prop)[p];
          page.style[key] = prop[key];
        }
        page.classList.add('docSlider-page');
        page.classList.add('docSlider-scroll');
        page.setAttribute('data-ds-index', i.toString());
        page.setAttribute('tabindex', '0');
        inner.appendChild(page);
      }
      wrapper.appendChild(inner);
    },
    createPager: function createPager() {
      if (!op.pager) return;
      var pageLength = document.querySelectorAll('.docSlider-inner > *').length;
      if (document.querySelector('.docSlider-pager')) {
        var buttons = document.querySelectorAll('.docSlider-button');
        for (var i = 0; i < buttons.length; i++) {
          var button = buttons[i];
          button.setAttribute('data-ds-jump', i.toString());
          button.setAttribute('tabindex', '-1');
        }
      } else {
        var pager = document.createElement('nav');
        pager.classList.add('docSlider-pager');
        for (var _i = 0; _i < pageLength; _i++) {
          var _button = document.createElement('button');
          _button.classList.add('docSlider-button');
          _button.setAttribute('data-ds-jump', _i.toString());
          _button.setAttribute('tabindex', '-1');
          pager.appendChild(_button);
        }
        document.querySelector('.docSlider').appendChild(pager);
      }
    },
    setData: function setData() {
      d.html = document.documentElement;
      d.wrapper = document.querySelector('.docSlider');
      d.pages = document.querySelectorAll('.docSlider-inner > *');
      d.pager = document.querySelector('.docSlider-pager');
      d.buttons = document.querySelectorAll('.docSlider-pager .docSlider-button');
      d.length = d.pages.length;
      d.now = 0;
      d.past = 0;
      d.xy = op.horizontal ? 'X' : 'Y';
      d.yx = !op.horizontal ? 'X' : 'Y';
      d.wheel = 'onwheel' in document ? 'wheel' : 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll';
      d.wheelTick = true;
      d.wheelEnable = true;
      d.fromPoint = 'elementsFromPoint' in document ? 'elementsFromPoint' : 'msElementsFromPoint';
      d.isTouch = 'ontouchstart' in window;
      d.isMobile = /iPhone|Android.+Mobile/.test(navigator.userAgent);
      d.resizeTimer = 0;
      d.speed = null;
      d.easing = null;
      d.enable = true;
      d.type = null;
      d.pastType = null;
      d.active = null;
      u.updatePager();
      u.updateClass();
      d.active = d.pages[d.now];
      d.pages[d.now].focus({
        preventScroll: false
      });
    },
    setEvent: function setEvent() {
      for (var i = 0; i < d.length; i++) {
        var page = d.pages[i];
        var button = d.buttons[i];
        page.addEventListener('focusin', u.focusin);
        if (button === undefined) continue;
        button.addEventListener('click', u.pagerClick);
      }
      document.addEventListener('keyup', u.keyup);
      document.addEventListener(d.wheel, u.wheel);
      d.pages[0].addEventListener('transitionstart', u.transitionstart);
      d.pages[0].addEventListener('transitionend', u.transitionend);
      if (d.isTouch) {
        d.touch = {
          move: false,
          nextX: 'right',
          prevX: 'left',
          nextY: 'bottom',
          prevY: 'top',
          X: {},
          Y: {}
        };
        d.wrapper.addEventListener('touchstart', u.touchstart, false);
        d.wrapper.addEventListener('touchmove', u.touchmove, false);
        d.wrapper.addEventListener('touchend', u.touchend, false);
      }
      if (d.isMobile) {
        u.setFV();
        window.addEventListener('resize', u.resize);
      }
    },
    hashJump: function hashJump() {
      var to = u.hashToIndex(location.hash);
      if (to === d.now) return false;
      d.speed = op.startSpeed === null ? op.speed : op.startSpeed;
      d.type = 'anchor';
      if (d.speed) {
        setTimeout(function () {
          u.pageChange(to);
        }, 200);
      } else {
        u.pageChange(to);
      }
      return true;
    }
  };
  var u = {
    hashToIndex: function hashToIndex(hash) {
      return function () {
        if (hash.length) {
          var page = document.querySelector(hash);
          if (!page || !page.hasAttribute('data-ds-index')) return 0;
          return Number(page.getAttribute('data-ds-index'));
        } else {
          return 0;
        }
      }();
    },
    indexCheck: function indexCheck(num) {
      return num >= 0 && num < d.length ? num : d.now;
    },
    pageChange: function pageChange(to) {
      if (d.type !== 'focus') d.pages[to].focus();
      d.active = d.pages[to];
      if (to === d.now) return;
      d.type = d.type ? d.type : 'focus';
      d.past = d.now;
      d.now = to;
      var speed = d.speed === null ? op.speed : d.speed;
      var easing = d.easing === null ? op.easing : d.easing;
      for (var i = 0; i < d.length; i++) {
        var page = d.pages[i];
        var prop = op.setChangeCss(i, d.now, speed, easing, op.horizontal);
        for (var p = 0; p < Object.keys(prop).length; p++) {
          var key = Object.keys(prop)[p];
          page.style[key] = prop[key];
        }
      }
      if (!speed) {
        if (op.scrollReset) u.scrollReset(d.pages[d.now]);
        if (pcr) u.animationReset(d.past);
        op.beforeChange(d.past, d.pages[d.past], d.now, d.pages[d.now], d.type);
        d.pastType = d.type;
        d.type = null;
        if (sc) scrollCue._updateWithDocSlider();
        op.afterChange(d.now, d.pages[d.now], d.past, d.pages[d.past], d.pastType);
        d.pastType = null;
      }
      d.speed = null;
      d.easing = null;
      u.updatePager();
      u.updateClass();
    },
    focusin: function focusin() {
      var to = Number(this.getAttribute('data-ds-index'));
      d.type = d.type ? d.type : 'focus';
      u.pageChange(to);
    },
    focusinx: function focusinx() {
      var to = Number(this.getAttribute('data-ds-index'));
      d.active = d.pages[to];
      if (to === d.now) return;
      d.type = d.type ? d.type : 'focus';
      d.past = d.now;
      d.now = to;
      var speed = d.speed === null ? op.speed : d.speed;
      var easing = d.easing === null ? op.easing : d.easing;
      for (var i = 0; i < d.length; i++) {
        var page = d.pages[i];
        var prop = op.setChangeCss(i, d.now, speed, easing, op.horizontal);
        for (var p = 0; p < Object.keys(prop).length; p++) {
          var key = Object.keys(prop)[p];
          page.style[key] = prop[key];
        }
      }
      if (!speed) {
        if (op.scrollReset) u.scrollReset(d.pages[d.now]);
        if (pcr) u.animationReset(d.past);
        op.beforeChange(d.past, d.pages[d.past], d.now, d.pages[d.now], d.type);
        d.pastType = d.type;
        d.type = null;
        if (sc) scrollCue._updateWithDocSlider();
        op.afterChange(d.now, d.pages[d.now], d.past, d.pages[d.past], d.pastType);
        d.pastType = null;
      }
      d.speed = null;
      d.easing = null;
      u.updatePager();
      u.updateClass();
    },
    pagerClick: function pagerClick() {
      if (!d.enable) return;
      var to = Number(this.getAttribute('data-ds-jump'));
      d.type = 'pager';
      u.pageChange(to);
    },
    updatePager: function updatePager() {
      for (var i = 0; i < d.length; i++) {
        var button = d.buttons[i];
        if (button === undefined) continue;
        button.classList.remove('selected');
      }
      if (d.buttons[d.now] === undefined) return;
      d.buttons[d.now].classList.add('selected');
    },
    updateClass: function updateClass() {
      var past = d.pages[d.past];
      var pastIndex = past.getAttribute('data-ds-index');
      var pastPage = Number(pastIndex) + 1;
      var pastId = past.hasAttribute('id') ? past.getAttribute('id') : false;
      var now = d.pages[d.now];
      var nowIndex = now.getAttribute('data-ds-index');
      var nowPage = Number(nowIndex) + 1;
      var nowId = now.hasAttribute('id') ? now.getAttribute('id') : false;
      d.html.classList.remove('docSlider-index_' + pastIndex);
      d.html.classList.remove('docSlider-page_' + pastPage);
      d.html.classList.remove('docSlider-id_' + pastId);
      d.html.classList.add('docSlider-index_' + nowIndex);
      d.html.classList.add('docSlider-page_' + nowPage);
      if (nowId) d.html.classList.add('docSlider-id_' + nowId);
      d.pages[d.past].classList.remove('docSlider-current');
      d.pages[d.now].classList.add('docSlider-current');
    },
    keyup: function keyup(e) {
      if (!d.enable) return;
      if (d.pages[d.now] !== document.activeElement) return;
      var to;
      var key = e.key;
      var shift = e.shiftKey;
      var page = d.pages[d.now];
      if ((shift && / |Spacebar/.test(key) || !shift && /ArrowUp|Up|PageUp/.test(key)) && u.scrollEnd(page, 'top')) {
        to = d.now - 1;
      } else if (!shift && / |Spacebar|ArrowDown|Down|PageDown/.test(key) && u.scrollEnd(page, 'bottom')) {
        to = d.now + 1;
      } else if (!shift && key === 'Home') {
        to = 0;
      } else if (!shift && key === 'End') {
        to = d.length - 1;
      } else if (!shift && op.horizontal && /ArrowLeft|Left/.test(key)) {
        to = d.now - 1;
      } else if (!shift && op.horizontal && /ArrowRight|Right/.test(key)) {
        to = d.now + 1;
      } else {
        return;
      }
      if (u.indexCheck(to) === d.now) return;
      d.type = 'key';
      u.pageChange(to);
    },
    scrollEnd: function scrollEnd(element, direction) {
      switch (direction) {
        case 'top':
          return element.scrollTop <= 0;
        case 'bottom':
          return element.scrollTop >= element.scrollHeight - element.clientHeight;
        case 'left':
          return element.scrollLeft <= 0;
        case 'right':
          return element.scrollLeft >= element.scrollWidth - element.clientWidth;
        default:
          return direction;
      }
    },
    wheel: function wheel(e) {
      if (!d.wheelTick) return;
      requestAnimationFrame(function () {
        d.wheelTick = true;
        if (!d.enable) return;
        if (!d.wheelEnable) return;
        var delta = e.deltaY ? -e.deltaY : e.wheelDelta ? e.wheelDelta : -e.detail;
        var elms = document[d.fromPoint](e.pageX, e.pageY);
        var distance = delta > 0 ? 'top' : 'bottom';
        var to = u.indexCheck(distance === 'top' ? d.now - 1 : d.now + 1);
        if (d.active !== d.pages[d.now]) return;
        if (to === d.now) return;
        for (var i = 0; i < elms.length; i++) {
          var elm = elms[i];
          if (elm.classList.contains('docSlider-scroll') && !u.scrollEnd(elm, distance)) return;
        }
        d.type = 'scroll';
        u.pageChange(to);
      });
      d.wheelTick = false;
    },
    transitionstart: function transitionstart() {
      d.wheelEnable = false;
      if (op.scrollReset) u.scrollReset(d.pages[d.now]);
      if (pcr) u.animationReset(d.past);
      op.beforeChange(d.past, d.pages[d.past], d.now, d.pages[d.now], d.type);
      d.pastType = d.type;
      d.type = null;
    },
    transitionend: function transitionend() {
      d.wheelEnable = true;
      if (sc) scrollCue._updateWithDocSlider();
      op.afterChange(d.now, d.pages[d.now], d.past, d.pages[d.past], d.pastType);
      d.pastType = null;
    },
    resize: function resize() {
      if (d.resizeTimer > 0) clearTimeout(d.resizeTimer);
      d.resizeTimer = setTimeout(u.setFV, 200);
    },
    setFV: function setFV() {
      d.wrapper.style.height = window.innerHeight + '';
      d.wrapper.style.height = window.innerHeight + 'px';
    },
    touchstart: function touchstart(e) {
      if (!d.enable) return;
      if (e.touches.length > 1) return;
      d.touch.move = false;
      d.touch.X.start = e.touches[0].pageX;
      d.touch.Y.start = e.touches[0].pageY;
    },
    touchmove: function touchmove(e) {
      if (!d.enable) return;
      if (e.touches.length > 1) {
        e.preventDefault();
        return;
      }
      d.touch.move = true;
      d.touch.X.move = e.changedTouches[0].pageX;
      d.touch.Y.move = e.changedTouches[0].pageY;
    },
    touchend: function touchend(e) {
      if (!d.enable) return;
      if (e.touches.length > 1) return;
      if (!d.touch.move) return;
      d.touch.X.distance = d.touch.X.move - d.touch.X.start;
      d.touch.Y.distance = d.touch.Y.move - d.touch.Y.start;
      if (Math.abs(d.touch[d.xy].distance) < Math.abs(d.touch[d.yx].distance)) return;
      var np = d.touch[d.xy].distance < 0 ? 'next' : 'prev';
      var to = u.indexCheck(np === 'next' ? d.now + 1 : d.now - 1);
      if (to === d.now) return;
      if (d.now === 0 && np === 'prev' || d.now === d.length - 1 && np === 'next') return;
      var direction = d.touch[np + d.xy];
      var elms = document[d.fromPoint](d.touch.X.start, d.touch.Y.start);
      for (var i = 0; i < elms.length; i++) {
        var elm = elms[i];
        if (elm.classList.contains('docSlider-scroll') && !u.scrollEnd(elm, direction)) return;
      }
      d.type = 'scroll';
      u.pageChange(to);
    },
    scrollReset: function scrollReset(page) {
      page.scrollTop = 0;
      page.scrollLeft = 0;
    },
    animationReset: function animationReset(index) {
      var selector = '[data-scpage][data-show="true"]';
      var elms = document.querySelectorAll(selector);
      if (!elms.length) return false;
      for (var i = 0; i < elms.length; i++) {
        var elm = elms[i];
        var classes = elm.getAttribute('data-addClass');
        if (elm.getAttribute('data-scpage') === index + '') continue;
        elm.removeAttribute('style');
        elm.removeAttribute('data-show');
        if (!classes) continue;
        classes = classes.split(' ');
        for (var j = 0; j < classes.length; j++) {
          var className = classes[j];
          elm.classList.remove(className);
        }
      }
      scrollCue._searchElements();
    }
  };
  return {
    init: function init(options) {
      var startHash;
      f.setOptions(options);
      f.createInner();
      f.createPager();
      f.setData();
      f.setEvent();
      startHash = f.hashJump();
      sc = typeof scrollCue === 'undefined' ? false : scrollCue._hasDocSlider();
      pcr = typeof scrollCue === 'undefined' ? false : scrollCue._hasPageChangeReset();
      if (sc) {
        scrollCue._initWithDocSlider(startHash);
      }
      op.complete(op, docSlider.getElements());
    },
    jumpPage: function jumpPage(to, speed, easing) {
      var index;
      if (to === undefined) return;
      if (isNaN(to)) {
        index = u.hashToIndex('#' + to.replace('#', ''));
      } else {
        index = u.indexCheck(to < 0 ? d.length + to : to);
      }
      d.speed = speed === undefined ? null : speed;
      d.easing = easing === undefined ? null : easing;
      d.type = 'jumpPage';
      u.pageChange(index);
    },
    nextPage: function nextPage(speed, easing) {
      var index = u.indexCheck(d.now + 1);
      d.speed = speed === undefined ? null : speed;
      d.easing = easing === undefined ? null : easing;
      d.type = 'nextPage';
      u.pageChange(index);
    },
    prevPage: function prevPage(speed, easing) {
      var index = u.indexCheck(d.now - 1);
      d.speed = speed === undefined ? null : speed;
      d.easing = easing === undefined ? null : easing;
      d.type = 'prevPage';
      u.pageChange(index);
    },
    getOptions: function getOptions() {
      return op;
    },
    getElements: function getElements() {
      return {
        wrapper: d.wrapper,
        pages: d.pages,
        pager: d.pager,
        buttons: d.buttons
      };
    },
    getCurrentIndex: function getCurrentIndex() {
      return d.now;
    },
    getCurrentPage: function getCurrentPage() {
      return d.pages[d.now];
    },
    enable: function enable(toggle) {
      d.enable = toggle === undefined ? !d.enable : toggle;
      var tabindex = d.enable ? '0' : '-1';
      for (var i = 0; i < d.length; i++) {
        d.pages[i].setAttribute('tabindex', tabindex);
      }
    },
    _getWheelEnable: function _getWheelEnable() {
      return d.wheelEnable;
    }
  };
}();

/***/ })
/******/ ]);